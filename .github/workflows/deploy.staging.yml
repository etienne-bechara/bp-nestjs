# This workflow will build a docker container, publish it to Google Container Registry,
# and deploy it on Cloud Run when a commit is pushed on stage branch
#
# To configure this workflow, set up secrets in your workspace:
# - STG_GCP_PROJECT: Project ID at Google Cloud
# - STG_GCP_SA_KEY: JSON Service Account Key to authenticate CLI
# - STG_ENV_FILE: .env file to be injected on container
#

name: Staging Deploy
on:
  push:
    branches: [stage]

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  ENV_FILE: ${{ secrets.STG_ENV_FILE }}
  GCP_PROJECT: ${{ secrets.STG_GCP_PROJECT }}
  REGISTRY_HOSTNAME: gcr.io
  REGISTRY_IMAGE_NAME: stg-${{ github.event.repository.name }}
  CLOUD_RUN_SERVICE_NAME: stg-${{ github.event.repository.name }}
  CLOUD_RUN_REGION: us-east1
  CLOUD_RUN_CPU: 1
  CLOUD_RUN_MEMORY: 1Gi
  CLOUD_RUN_TIMEOUT: 90s
  CLOUD_RUN_MAX_INSTANCES: 10
  CLOUD_RUN_CONCURRENCY: 20

jobs:
  compile-test-build-publish-deploy:
    name: Google Cloud Run
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Use Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Create Environment File
      run: echo "$ENV_FILE" > .env

    - name: Install Dependencies
      run: npm install

    - name: Build Deployable Artifact
      run: npm run build:cache

    - name: Execute Lint Check
      run: npm run lint

    - name: Execute Unit Tests
      run: npm run test

    - name: Authenticate Google Cloud Platform
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.STG_GCP_SA_KEY }}

    - name: Configure Google Cloud CLI Tool
      run: |
        gcloud auth configure-docker
      
    - name: Build Container Image
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GCP_PROJECT"/"$REGISTRY_IMAGE_NAME":"$GITHUB_SHA" \
          build/.

    - name: Publish Image to Container Registry
      run: |
        docker push $REGISTRY_HOSTNAME/$GCP_PROJECT/$REGISTRY_IMAGE_NAME:$GITHUB_SHA

    - name: Deploy Image on Google Cloud Run
      run: |
        gcloud run deploy $CLOUD_RUN_SERVICE_NAME \
          --project $GCP_PROJECT \
          --image $REGISTRY_HOSTNAME/$GCP_PROJECT/$REGISTRY_IMAGE_NAME:$GITHUB_SHA \
          --region $CLOUD_RUN_REGION \
          --cpu $CLOUD_RUN_CPU \
          --memory $CLOUD_RUN_MEMORY \
          --timeout $CLOUD_RUN_TIMEOUT \
          --max-instances $CLOUD_RUN_MAX_INSTANCES \
          --concurrency $CLOUD_RUN_CONCURRENCY \
          --platform managed \
          --allow-unauthenticated

    - name: Execute Migrations
      run: |
        npx mikro-orm migration:up
